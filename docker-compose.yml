version: "3.9"

services:
  zookeeper:
    image: bitnamilegacy/zookeeper:3.8.0
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    restart: unless-stopped

  producer:
    build: ./kafka_producer
    container_name: producer
    env_file: .env
    depends_on:
      - kafka
    restart: unless-stopped

  consumer_for_azure:
    build: ./kafka_consumer_for_azure
    container_name: kafka_consumer_for_azure
    env_file: .env
    depends_on:
      - kafka
    restart: unless-stopped

  consumer_for_postgres:
    build: ./kafka_consumer_for_postgres
    container_name: kafka_consumer_for_postgres
    env_file: .env
    depends_on:
      - kafka
      - postgres
    restart: unless-stopped

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: kafka_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: kafka_data
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    depends_on:
      - postgres
    restart: unless-stopped

  airflow:
    image: apache/airflow:2.9.2
    container_name: airflow
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://kafka_user:${POSTGRES_PASSWORD}@postgres:5432/kafka_data
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - _PIP_ADDITIONAL_REQUIREMENTS=apache-airflow-providers-postgres apache-airflow-providers-snowflake
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    restart: unless-stopped
    command: >
      bash -c "
      airflow db init &&
      airflow users create --username admin --password admin --firstname admin --lastname user --role Admin --email 711laskowski@gmail.com &&
      airflow webserver -p 8080 & 
      airflow scheduler
      "
    depends_on:
      - postgres

volumes:
  postgres_data: